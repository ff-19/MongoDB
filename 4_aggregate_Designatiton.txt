use employee;
switched to db employee
 
> show collections;
db.Emp.insertOne({Name:{FName:"Sai",LName:"Bhosale"},Company:"TCS",Salary:4000000,Designation:"Programmer",Age:20,Expertise:["Web","AIML"],DOB:"15/02/2004",Email:"sanyamkudale@gmail.com",Contact:9322720904,Add:[{PAdd:"Pune",LAdd:"Wai"}]})
 
 
db.Emp.insertMany([{Name:{FName:"Avi",LName:"Bhosale"},Company:"Infosys",Salary:27000,Designation:"Programmer",Age:23,Expertise:["Security","DS"],DOB:"22/01/1988",Email:"pb@gmail.com",Contact:8830302417,Add:[{PAdd:{City:"Vyajwadi",Pin:41320},LAdd:"Kondhave"}]},{Name:{FName:"Ravi",LName:"Munde"},Company:"IBM",Salary:60000,Designation:"Tester",Age:20,Expertise:["Web"],DOB:"24/05/2003",Email:"rj@gmail.com",Contact:7028003577,Add:[{PAdd:{City:"Pune",Pin:411001},LAdd:"Satara"}]},{Name:{FName:"Yash",LName:"Waghamare"},Company:"TCS",Salary:70000,Designation:"Tester",Age:26,Expertise:["Sql","Fullstack"],DOB:"02/5/2000",Email:"kk@gmail.com",Contact:9922639260,Add:[{PAdd:{City:"Kavthe",Pin:411364},LAdd:"Wai"}]},{Name:{FName:"Sham",LName:"Bavskar"},Company:"TCS",Salary:70000,Designation:"Tester",Age:24,Expertise:["Mysql","Mongodb","Cassendra"],DOB:"5/05/2001",Email:"xy@gmail.com",Contact:7582302417,Add:[{PAdd:{City:"Mumbai",pin:410604},LAdd:"Pune"}]},{Name:{FName:"Atharva",LName:"Gangarde"},Company:"ABC",Salary:50000,Designation:"Developer",Age:21,Expertise:["App","UI"],DOB:"14/09/1999",Email:"vd@gmail.com",Contact:77845484155,Add:[{PAdd:{City:"Pune",Pin:20140},LAdd:"Nagar"}]}])
 
 
 
1. Using aggregation Return Designation with Total Salary is 
Above 200000.
> db.Emp.aggregate({$group:{_id:"Designation",totalSal:{$sum:"$Salary"}}},{$match:{totalSal:{$gt:200000}}})
 
2. Using Aggregate method returns names and _id in upper case and in alphabetical order.
db.Emp.aggregate([{$project :{Name:{$toUpper:"$Name"}, id:1 }},{ $sort : {Name :1}}] ) 
 
3. Using aggregation method find Employee with Total Salary for 
Each City with Designation="DBA".
> db.Emp.aggregate([{$match:{Designation:"Tester"}},{$group:{_id:"$Add.PAdd",totalsal:{$sum:"$Salary"}}}])
 
4. Create Single Field Indexes on Designation field of employee 
collection.
> db.Emp.createIndex({"Designation":1})
 
5. To Create Multikey Indexes on Expertise field of employee 
collection.
> db.Emp.createIndex({"Expertise.Mysql":1,"Expertise.Mongodb":1})
 
6. Create an Index on Emp_id field, compare the time require to 
search Emp_id before and after creating an index. (Hint Add at 
least 10000 Documents)
 
7. Return a List of Indexes on created on employee Collection.
>db.Emp.getIndexes()